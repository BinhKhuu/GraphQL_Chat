name: CI

on: 
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build-api:
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v4
        
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.411'    
      
      - name: dotnet publish api
        run: dotnet publish ./API.GraphQL_Chat/API.GraphQL_Chat.csproj --configuration Release -o ./publish/api

      - name: Upload API Artifact
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: api-build
          path: ./publish/api/
          
  build-client:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          node-version: '24'
          cache: 'npm'
          cache-dependency-path: ./Client.GraphQL_Chat/graphql-chat/package-lock.json

      - name: Install Angular CLI
        run: npm install -g @angular/cli

      - name: Run NPM install
        working-directory: ./Client.GraphQL_Chat/graphql-chat
        run: npm install

      - name: Build Angular Application
        working-directory: ./Client.GraphQL_Chat/graphql-chat
        run: ng build

      - name: Upload Angular App
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: WebApp
          path: ./Client.GraphQL_Chat/graphql-chat/dist/
  
  api-tests:
    runs-on: ubuntu-latest 
    needs: [build-api]
    steps:
      - uses: actions/checkout@v4
    
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.411'
  
      - name: DotNET Build Tests
        run: dotnet build ./Tests.GraphQL_Chat/Tests.GraphQL_Chat.csproj

      - name: Run api Tests
        run: dotnet test ./Tests.GraphQL_Chat/Tests.GraphQL_Chat.csproj